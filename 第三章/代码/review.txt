1.int, short, long, long long, unsigned, signed, char
  根据数据运算的需要选择合适的数据类型和应用进行匹配

2.a)short a = 80;
  b)unsigned int b = 42110;
  c)unsigned int c = 3000000000; long c = 3000000000; long long c = 3000000000;

3.C++语言没有提供自动防止超出整数类型漫威的功能，需要程序员自己预估数据大小并选择合适的数据类型，每种数据类型的宽度，C++并没有做规定，具体的值由开发平台和编译器决定。

4.默认C++整数常量在不超出int类型范围的应用情况下，默认优先使用int类型
  33：int类型
  33L：以long类型来存储整数常量

5.在基于ASCII的平台下，两者是等价的。但是:
  char grade = 65; 先将65存储为int类型，然后再类型转换，将int转换为char存储在grade

6.
  1)char ch = 88;
    cout << ch << endl;
  2)cout << (char)88 << endl;  // cout << char(88) << endl;

7.不同的平台和编译器对应的long和long long类型的大小是不同的，
  如果long长度为4字节，则存放在double类型中不会出现舍入误差，如果long long类型为8字节，则存放在double类型中会出现舍入误差。

8.a) 8*9+2 = 74
  b) 6*3/4 = 4
  c) 3/4*6 = 0
  d)  6.0*3/4 = 4.5
  e)  15%4 = 3

9.int sum = (int)x1 + (int)x2;  / int sum = int(x1) + int(x2);
  int sum = (int)(x1 + x2)   / int sum = int(x1+x2);

10.a)cars--->int
   b)iou --> float
   c)level --> char
   d)crat ---> char32_t
   e)fract --> double