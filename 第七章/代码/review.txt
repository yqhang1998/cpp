1.

2.
a)
void igor(void);
b)
float tofu(int);   //  float tofu(int n)
c)
double mpg(double, double);
d)
long summation(long [], int);
e)
double doctor(const char *str);
f)
void ofcourse(boss bs);
g)
char *plot(map *pt);

3.
void set_array(int arr[], int size, int value)
{
	for(int i = 0; i < size; i++)
		arr[i] = value;
}

4.
void set_array(int *begin, int *end, int value)
{
	for(int *pt = begin; pt != end; pt++)
		*pt = value;
}

5.
double max_number(const double arr[], int size)
{
	int max_value = arr[0];
	for(int i = 1; i < size; i++)
	{
		if(max_value < arr[i])
			max_value = arr[i];
	}
	return max_value;
}

6.

7.
char str[] = "Hello world";
"Hello world"
char *pt = "Hello world";

8.
int replace(char *str, char c1, char c2)
{
	int count = 0;

	while(*str)
	{
		if(*str == c1)
		{
			*str = c2;
			count++;
		}
		str++;
	}
	
	return count;
}

9.
*"pizza"  ->  p
"taco"[2] -> int *pt = "taco"  -> pt[2]  -> c

10.

11.
int judge(int (*pf)(const char *));

12.
a)
void show(applicant ap)
{
	cout << ap.name << endl;
	for(int i = 0; i < 3; i++)
		cout << ap.credit_ratings[i] << endl;
}
b)
void show(const applicant *pt)
{
	cout << pt->name << endl;
	for(int i = 0; i < 3; i++)
		cout << ap->credit_ratings[i] << endl;
}

13.
typedef void (*p_f1)(applicant *a);
p_f1 p1 = f1;

typedefchar *(*p_f2)(const applicant *a1, const applicant *a2);
p_f2 p2 = f2;

p_f1 ap[5];
p_f2 (*pa)[10];
