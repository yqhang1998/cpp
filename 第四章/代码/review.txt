1.
a:
char actor[30];
b:
short betsie[100];
c:
float chuck[13];
d:
long double dipsea[64];

2.
#inlcude <array>
array<char, 30> actor;
array<short, 100> betsie;
array<float, 13> chuck;
array<long double, 64> dipsea;

3.
int arr[5] = {1, 3, 5, 7, 9};

4.
int arr[5] = {1, 3, 5, 7, 9};
int even = arr[0] + arr[4];

5.
float ideas[10];
cout << ideas[1] << endl;

6.
char str[] = "cheeseburger";

7.
string str = "Waldorf Salad";

8.
struct fish
{
	char kind[30];
	int weight;
	float length;
}; 

9.
struct fish
{
	char kind[30];
	int weight;
	float length;
};

fish ff = {"BigFish", 12, 4.2};

10.
enum Response {No, Yes, Maybe};

11.
double ted = 1.8;
double *pt = &ted;
cout << "ted = " << *pt << endl;

12.
float treacle[10];
float *pt = &treacle[0]; // float *pt = treacle;
cout << pt[0] << " " << pt[9] << endl;

13.
int size;
cout << "Enter a number:" << endl;
cin >> size;
int *pt = new int[size];
vector<int> arr(size);

14.
valiable,print string's address. won't print string "Home of jolly bytes"

15.
struct fish
{
	char kind[30];
	int weight;
	float length;
};

fish *pt = new fish;
cout << pt->kind << ", " << pt->weight << ", " << pt->length << "." << endl;

16.
cin >> address; >> read from input until it comes a blank

17.
#include <string>
#include <vector>
#include <array>

const int size = 10;
std::vector<std::string> arr(size);
std::array<std::string, size> array;
